# Example Fluent Bit configuration for KV Responder log aggregation
# This configuration collects structured logs and forwards them to your log aggregation system

apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-kv-responder-config
  namespace: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     info
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Path              /var/log/containers/*kv-responder*.log
        Parser            docker
        Tag               kv.responder.*
        Refresh_Interval  5
        Mem_Buf_Limit     50MB
        Skip_Long_Lines   On

    [FILTER]
        Name                kubernetes
        Match               kv.responder.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kv.responder.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude Off
        Annotations         Off
        Labels              On

    [FILTER]
        Name                parser
        Match               kv.responder.*
        Key_Name            log
        Parser              kv_json_parser
        Reserve_Data        On

    [FILTER]
        Name                modify
        Match               kv.responder.*
        Add                 service kv-responder
        Add                 log_source kubernetes

    # Add tenant information from pod labels
    [FILTER]
        Name                nest
        Match               kv.responder.*
        Operation           lift
        Nested_under        kubernetes
        Add_prefix          k8s_

    [OUTPUT]
        Name                elasticsearch
        Match               kv.responder.*
        Host                elasticsearch.logging.svc.cluster.local
        Port                9200
        Index               kv-responder-logs
        Type                _doc
        Logstash_Format     On
        Logstash_Prefix     kv-responder
        Logstash_DateFormat %Y.%m.%d
        Include_Tag_Key     On
        Tag_Key             @tag
        Time_Key            @timestamp

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On

    [PARSER]
        Name        kv_json_parser
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%LZ
        Time_Keep   On

---
# Example Elasticsearch index template for KV Responder logs
apiVersion: v1
kind: ConfigMap
metadata:
  name: kv-responder-index-template
  namespace: logging
data:
  template.json: |
    {
      "index_patterns": ["kv-responder-*"],
      "template": {
        "settings": {
          "number_of_shards": 1,
          "number_of_replicas": 1,
          "index.refresh_interval": "30s"
        },
        "mappings": {
          "properties": {
            "@timestamp": {
              "type": "date"
            },
            "level": {
              "type": "keyword"
            },
            "msg": {
              "type": "text",
              "analyzer": "standard"
            },
            "tenant": {
              "type": "keyword"
            },
            "service": {
              "type": "keyword"
            },
            "version": {
              "type": "keyword"
            },
            "environment": {
              "type": "keyword"
            },
            "namespace": {
              "type": "keyword"
            },
            "podName": {
              "type": "keyword"
            },
            "podIP": {
              "type": "ip"
            },
            "req": {
              "properties": {
                "method": {
                  "type": "keyword"
                },
                "url": {
                  "type": "keyword"
                },
                "remoteAddress": {
                  "type": "ip"
                },
                "userAgent": {
                  "type": "text"
                }
              }
            },
            "res": {
              "properties": {
                "statusCode": {
                  "type": "integer"
                },
                "responseTime": {
                  "type": "float"
                }
              }
            },
            "err": {
              "properties": {
                "message": {
                  "type": "text"
                },
                "stack": {
                  "type": "text"
                },
                "type": {
                  "type": "keyword"
                }
              }
            },
            "k8s_labels": {
              "properties": {
                "tenant": {
                  "type": "keyword"
                },
                "app_kubernetes_io_name": {
                  "type": "keyword"
                },
                "app_kubernetes_io_instance": {
                  "type": "keyword"
                }
              }
            }
          }
        }
      }
    }