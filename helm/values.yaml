# Default values for kv-discovery-service
# This is a YAML-formatted file.

# Tenant that drives the deployment configuration
# This creates independent deployments, services, and HPA instances
tenant: "default"

replicaCount: 3

image:
  repository: kv-responder-oci
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  type: ClusterIP
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  hosts:
    - host: ""
      paths:
        - path: /{{ .Values.tenant }}(/|$)(.*)
          pathType: Prefix
  tls: []

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  
  # Advanced scaling behavior for tenant-specific load patterns
  scaleUpStabilizationWindowSeconds: 60    # How long to wait before scaling up
  scaleUpPercent: 50                       # Max % increase per scale-up event
  scaleUpPods: 4                          # Max pods to add per scale-up event
  scaleUpPeriodSeconds: 60                # Period for scale-up policies
  
  scaleDownStabilizationWindowSeconds: 300 # How long to wait before scaling down
  scaleDownPercent: 10                     # Max % decrease per scale-down event
  scaleDownPods: 2                        # Max pods to remove per scale-down event
  scaleDownPeriodSeconds: 60              # Period for scale-down policies

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables
env:
  PORT: "3000"
  NODE_ENV: "production"

# Logging configuration
logging:
  level: "info"  # debug, info, warn, error
  format: "json"  # json, pretty

# Distributed tracing configuration
tracing:
  enabled: true
  jaeger:
    enabled: false
    endpoint: "http://jaeger-collector:14268/api/traces"

# RBAC permissions (not needed for UDP discovery)
rbac:
  create: false
  rules: []

# Network policy for tenant isolation
networkPolicy:
  enabled: false  # Set to true to enable network-level tenant isolation

# Metrics configuration for monitoring and custom HPA metrics
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}
    relabelings: []
    metricRelabelings: []
  
  # Grafana dashboard configuration
  grafanaDashboard:
    enabled: true
    labels: {}
    annotations: {}
  
  # Prometheus alerting rules
  prometheusRules:
    enabled: true
    labels: {}
    annotations: {}